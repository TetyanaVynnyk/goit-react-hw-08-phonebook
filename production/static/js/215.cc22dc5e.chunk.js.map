{"version":3,"file":"static/js/215.cc22dc5e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook/ContactForm/contactForm.module.css?62c5","components/Phonebook/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/Phonebook/ContactList/contactList.module.css?239b","components/Phonebook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Phonebook/Filter/filter.module.css?7d57","redux/filter/filter-selectors.js","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"contactForm_formWrapper__CxiG+\",\"inputTitle\":\"contactForm_inputTitle__jPwCu\",\"formInput\":\"contactForm_formInput__BEnGu\",\"btn\":\"contactForm_btn__sLuHI\"};","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  fetchAllContacts,\r\n  fetchAddContact,\r\n} from '../../../redux/contacts/contacts-operations';\r\n\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport styles from './contactForm.module.css';\r\n\r\nconst ContactForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({ name: '', number: '' });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllContacts());\r\n  }, [dispatch]);\r\n\r\n  const handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    setState(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleAddContact = ({ name, number }) => {\r\n    dispatch(fetchAddContact({ name, number }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    handleAddContact({ ...state });\r\n    setState({ name: '', number: '' });\r\n  };\r\n\r\n  const { name, number } = state;\r\n\r\n  return (\r\n    <form className={styles.formWrapper} onSubmit={handleSubmit}>\r\n      <label className={styles.inputTitle} htmlFor=\"nameId\">\r\n        Name\r\n      </label>\r\n      <input\r\n        className={styles.formInput}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        nameid={nanoid()}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        value={name}\r\n        onChange={handleChangeForm}\r\n        placeholder='enter name'\r\n      />\r\n      <label className={styles.inputTitle} htmlFor=\"phoneId\">\r\n        Number\r\n      </label>\r\n      <input\r\n        className={styles.formInput}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        phoneid={nanoid()}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        value={number}\r\n        onChange={handleChangeForm}\r\n        placeholder='enter phone number'\r\n      />\r\n      <button className={styles.btn} type=\"submit\">\r\n        Add contacts\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","export const getAllContacts = ({contacts}) => contacts.items;\r\n\r\nexport const getFilteredContacts = ({contacts, filter}) => {\r\n    if (!filter) {\r\n        return contacts.items;\r\n    }\r\n\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const result = contacts.items.filter(({ name, number }) => {\r\n      return (\r\n        name.toLowerCase().includes(normalizedFilter) ||\r\n        number.toLowerCase().includes(normalizedFilter)\r\n      );\r\n    });\r\n\r\n    return result;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"contactList_contact__SaMvM\",\"btn\":\"contactList_btn__ouOld\"};","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { fetchDeleteContact } from \"../../../redux/contacts/contacts-operations\";\r\n\r\nimport { getFilteredContacts } from '../../../redux/contacts/contacts-selectors';\r\n\r\nimport styles from './contactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteContact = id => {\r\n    dispatch(fetchDeleteContact(id));\r\n  };\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li className={styles.contactItem} key={id}>\r\n          <p className={styles.contact}>\r\n            {name}:{number}\r\n          </p>\r\n          <button\r\n            className={styles.btn}\r\n            onClick={() => handleDeleteContact(id)}\r\n            type=\"button\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"filter_filterLabel__M5KSC\",\"filterInput\":\"filter_filterInput__TVMSR\"};","export const getFilter = ({filter}) => filter;","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport styles from './filter.module.css';\r\n\r\nimport {setFilter} from \"../../../redux/filter/filter-slice\";\r\n\r\nimport {getFilter} from \"../../../redux/filter/filter-selectors\";\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n    const handleFilter = ({ target }) => {\r\n    dispatch(setFilter(target.value))\r\n };\r\n\r\n  return (\r\n    <div className={styles.filterWrapper}>\r\n      <label className={styles.filterLabel} htmlFor=\"inputid\">\r\n        Find contacts by name\r\n        <input\r\n          className={styles.filterInput}\r\n          type=\"text\"\r\n          inputid={nanoid()}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          required\r\n          value={filter}\r\n          onChange={handleFilter}\r\n          placeholder=\"enter the contact you want to find\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\n\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst Phonebook = () => {\r\n  \r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n  \r\n  const isContacts = Boolean(filteredContacts.length);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create your Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      {isContacts ? (\r\n        <div>\r\n          <Filter/>\r\n          <ContactList />\r\n        </div>\r\n      ) : (\r\n        <><Filter /><p>You have no contacts</p></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n"],"names":["dispatch","useDispatch","useState","name","number","state","setState","useEffect","fetchAllContacts","handleChangeForm","target","value","prevState","className","styles","onSubmit","e","preventDefault","fetchAddContact","handleAddContact","htmlFor","type","nameid","nanoid","pattern","title","required","onChange","placeholder","phoneid","getFilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","includes","filteredContacts","useSelector","map","id","onClick","fetchDeleteContact","handleDeleteContact","getFilter","inputid","setFilter","isContacts","Boolean","length"],"sourceRoot":""}